# Log forwarder for Papertrail
#
# See the Loggy rsyslog.conf for TODO items

# Load Modules
module(load="imfile" PollingInterval="10")

# If we don't use this, we'll get the hostname of the Logger container
$LocalHostName missive-test

# My own addition
$WorkDirectory /var/spool/rsyslog

# See https://help.papertrailapp.com/kb/configuration/advanced-unix-logging-tips#rsyslog-2
$ActionResumeInterval 10
$ActionQueueSize 100000
$ActionQueueDiscardMark 97500
$ActionQueueHighWaterMark 80000
$ActionQueueType LinkedList
$ActionQueueFileName papertrailqueue
$ActionQueueCheckpointInterval 100
$ActionQueueMaxDiskSpace 2g
$ActionResumeRetryCount -1
$ActionQueueSaveOnShutdown on
$ActionQueueTimeoutEnqueue 2
$ActionQueueDiscardSeverity 0

# See https://help.papertrailapp.com/kb/configuration/encrypting-remote-syslog-with-tls-ssl/#download-root-certificates
$DefaultNetstreamDriverCAFile /etc/papertrail-bundle.pem # trust these CAs
$ActionSendStreamDriver gtls # use gtls netstream driver
$ActionSendStreamDriverMode 1 # require TLS
$ActionSendStreamDriverAuthMode x509/name # authenticate by hostname
$ActionSendStreamDriverPermittedPeer *.papertrailapp.com

# Fix the alias "logs0" and the dummy port number "0000" first
*.* @@logs0.papertrailapp.com:00000

# Use http://www.rsyslog.com/rsyslog-configuration-builder/ to generate new
# log file watchers.
#
# Read https://github.com/rsyslog/rsyslog/issues/2159 to see why PersistStateInterval
# seems to be necessary in Docker (@todo would be good to fix this properly, so that
# state files are written on shutdown without it).
#
# It seems that Docker shuts down the container before the state files can be
# written, even if there is an on-host volume. This is OK for now, as only a small
# number of log updates will be lost on reboot (I will revisit this if I get
# hints from the Rsyslog maintainers). The impact of this is that the log target
# may have a bit of deduplication to do, but that's not a big worry.

input(type="imfile"
    File="/var/log/missive/controller/socket-listener.log"
    Tag="socket"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/controller/php-errors.log"
    Tag="controller-php"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/transmitter/queue.log"
    Tag="queue"
    PersistStateInterval="100"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/transmitter/worker-manager.log"
    Tag="worker-mgr"
    PersistStateInterval="100"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/transmitter/php-errors.log"
    Tag="transmitter-php"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/storage/storage-server.log"
    Tag="storage"
    PersistStateInterval="50"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/storage/php-errors.log"
    Tag="storage-php"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/outtray/outtray-server.log"
    Tag="outtray"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/outtray/php-errors.log"
    Tag="outtray-php"
    PersistStateInterval="10"
    Facility="local0")

# Uses a wildcard to capture both access.log and error.log from Apache
input(type="imfile"
    File="/var/log/missive/interface/*.log"
    Tag="apache-interface"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/mongo/*.log"
    Tag="mongo"
    PersistStateInterval="10"
    Facility="local0")

input(type="imfile"
    File="/var/log/missive/traffic/traefik.log"
    Tag="traffic"
    PersistStateInterval="100"
    Facility="local0")

input(type="imfile"
    File="/var/log/test.log"
    Tag="test-logs"
    PersistStateInterval="10"
    Facility="local0")
